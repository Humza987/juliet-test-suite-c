# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

################################################################################################################################################
# Fortify Application Security provides your team with solutions to empower DevSecOps practices, enable cloud transformation, and secure your  #
# software supply chain. To learn more about Fortify, start a free trial or contact our sales team, visit fortify.com.                         #
#                                                                                                                                              #
# Use this starter workflow as a basis for integrating Fortify Application Security Testing into your GitHub workflows. This template          #
# demonstrates the steps to package the code+dependencies, initiate a scan, and optionally import SAST vulnerabilities into GitHub Security    #
# Code Scanning Alerts. Additional information is available in the workflow comments and the Fortify AST Action / fcli / Fortify product       #
# documentation. If you need additional assistance, please contact Fortify support.                                                            #
################################################################################################################################################

name: Fortify AST Scan

# Customize trigger events based on your DevSecOps process and/or policy
on:
  push:
    branches: [ "master" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "master" ]
  schedule:
    - cron: '18 17 * * 6'
  workflow_dispatch:

jobs:
  Fortify-AST-Scan:
    # Use the appropriate runner for building your source code. Ensure dev tools required to build your code are present and configured appropriately (MSBuild, Python, etc).
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      # Check out source code
      - name: Check Out Source Code
        uses: actions/checkout@v4

      # Java is required to run the various Fortify utilities. Ensuring proper version is installed on the runner.
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      # Explicitly download upload-artifact@v4 to avoid the v3 error
      - name: Setup Upload Artifact
        uses: actions/upload-artifact@v4

      # Use the explicit setup action from fortify/github-action
      - name: Setup Fortify Tools
        uses: fortify/github-action/setup@v1

      # Verify tools are in PATH before using them
      - name: Verify Fortify Tools
        run: |
          echo "PATH: $PATH"
          echo "Listing Fortify tools:"
          which fcli || echo "fcli not found"
          which scancentral || echo "scancentral not found"
          # If tools not found, try to locate them
          find $HOME -name fcli -type f 2>/dev/null || echo "fcli not found in $HOME"
          find $HOME -name scancentral -type f 2>/dev/null || echo "scancentral not found in $HOME"
          # Add possible locations to PATH
          if [ -d "$HOME/.fortify/bin" ]; then
            echo "$HOME/.fortify/bin" >> $GITHUB_PATH
          fi
          if [ -d "$HOME/.fortify/scancentral-client/bin" ]; then
            echo "$HOME/.fortify/scancentral-client/bin" >> $GITHUB_PATH
          fi

      # Package the source code for scanning
      - name: Package Code
        run: |
          # Try to find scancentral in PATH
          scancentral package -bt none -o package.zip || \
          # Fallback to possible location
          { SCANCENTRAL_PATH=$(find $HOME -name scancentral -type f 2>/dev/null | head -1); [ -n "$SCANCENTRAL_PATH" ] && $SCANCENTRAL_PATH package -bt none -o package.zip; }
          
      # Authenticate to FoD
      - name: Authenticate to Fortify on Demand
        run: |
          # Try to find fcli in PATH
          fcli fod session login --url https://ams.fortify.com --tenant "${{secrets.FOD_TENANT}}" -u "${{secrets.FOD_USER}}" -p "${{secrets.FOD_PAT}}" || \
          # Fallback to possible location
          { FCLI_PATH=$(find $HOME -name fcli -type f 2>/dev/null | head -1); [ -n "$FCLI_PATH" ] && $FCLI_PATH fod session login --url https://ams.fortify.com --tenant "${{secrets.FOD_TENANT}}" -u "${{secrets.FOD_USER}}" -p "${{secrets.FOD_PAT}}"; }
          
      # Start the scan
      - name: Start SAST Scan
        run: |
          APP_NAME="${GITHUB_REPOSITORY_OWNER}-${GITHUB_REPOSITORY#*/}"
          RELEASE_NAME="${GITHUB_REF_NAME}"
          # Try to find fcli in PATH
          fcli fod sast-scan start --package package.zip --release "${APP_NAME}:${RELEASE_NAME}" --notes "GitHub Action initiated scan" || \
          # Fallback to possible location
          { FCLI_PATH=$(find $HOME -name fcli -type f 2>/dev/null | head -1); [ -n "$FCLI_PATH" ] && $FCLI_PATH fod sast-scan start --package package.zip --release "${APP_NAME}:${RELEASE_NAME}" --notes "GitHub Action initiated scan"; }
